#!/bin/bash

echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
echo "!!! Note that this script will DESTROY ALL DATA on designated disks !!!"
echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
echo
echo "Do you want to continue? If yes type capital 'YES':"
echo
read ANSWER
case $ANSWER in
  "YES")
    ;;
  *)
    echo "Aborting ..."
    exit 1
    ;;
esac

function until_success() {
  false
  while [ $? -gt 0 ]; do
    $@
    sleep 1
  done
}

if [ ! -d /etc/zfs_pools/<%= @name %> ]; then
  mkdir -p /etc/zfs_pools/<%= @name %>
fi
chmod 700 /etc/zfs_pools/<%= @name %>

<%- @disk_mapping.each do |disk_by_id, mapper| %>
  echo <%= mapper %>
  hdparm -tT <%= disk_by_id %>
  smartctl -q errorsonly -a <%= disk_by_id %> || exit $?
<%- end %>

<%- @disk_mapping.each do |disk_by_id, mapper| %>
  echo
  echo
  echo "/etc/zfs_pools/<%= @name %>/<%= mapper %>-<%= disk_by_id %>"
  if [ ! -e /dev/mapper/<%= mapper %> ]; then
    if [ ! -e /etc/zfs_pools/<%= @name %>/<%= mapper %>-<%= disk_by_id %>.luksFormatted ]; then
      until_success cryptsetup luksFormat /dev/disk/by-id/<%= disk_by_id %>
      until_success cryptsetup luksOpen /dev/disk/by-id/<%= disk_by_id %> <%= mapper %>
      touch /etc/zfs_pools/<%= @name %>/<%= mapper %>-<%= disk_by_id %>.luksFormatted
    else
      until_success cryptsetup luksOpen /dev/disk/by-id/<%= disk_by_id %> <%= mapper %>
    fi
  fi
<%- end %>

/sbin/modprobe zfs

if [ ! -e /etc/zfs_pools/<%= @name %>.created ]; then
  if [ -e <%= @mountpoint %>/.keep ]; then
    rm -f <%= @mountpoint %>/.keep
  fi
  if [ ! -d <%= @mountpoint %> ]; then
    mkdir -p <%= @mountpoint %>
  fi
  zpool create <%= @name %> <%= @type %> -m <%= @mountpoint %> -f <%= @disk_mapping.values.map { |x| "/dev/mapper/#{x}" }.join(' ') %> || exit $?
  touch /etc/zfs_pools/<%= @name %>.created
fi

zfs set atime=off <%= @name %>

<%- @sub_resources.to_h.each_pair do |sub_resource, members| %>
if [ ! -e /etc/zfs_pools/<%= @name %>/<%= sub_resource %>.created ]; then
  zfs create -o mountpoint=none <%= @name %>/<%= sub_resource %> || return $?
  if [ ! -d /etc/zfs_pools/<%= @name %> ]; then
    mkdir /etc/zfs_pools/<%= @name %> || return $?
  fi
  touch /etc/zfs_pools/<%= @name %>/<%= sub_resource %>.created || return $?
fi
<%- members.each do |member| %>
if [ ! -e /etc/zfs_pools/<%= @name %>/<%= sub_resource %>/<%= member[:name] %>.created ]; then
  zfs create -o mountpoint=<%= member[:mountpoint] %> <%= @name %>/<%= sub_resource %>/<%= member[:name] %> || return $?
  if [ ! -d /etc/zfs_pools/<%= @name %>/<%= sub_resource %> ]; then
    mkdir /etc/zfs_pools/<%= @name %>/<%= sub_resource %> || return $?
  fi
  touch /etc/zfs_pools/<%= @name %>/<%= sub_resource %>/<%= member[:name] %>.created || return $?
fi
<%- if member[:compression] %>
zfs set compression=<%= member[:compression] %> <%= @name %>/<%= sub_resource %>/<%= member[:name] %>
<%- end %>
<%- end %>
<%- end %>
